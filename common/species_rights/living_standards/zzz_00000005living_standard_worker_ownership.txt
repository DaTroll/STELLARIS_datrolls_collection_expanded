living_standard_worker_ownership = {
    potential = {
        exists = from
        from = {
            is_worker_coop_empire = yes
        }
    }
    triggered_pop_modifier = {
        potential = {
            always = yes
        }
        living_standard_trade_value_rulers_add = @trade_value_high
        living_standard_trade_value_specialists_add = @trade_value_high
        living_standard_trade_value_workers_add = @trade_value_high
    }
    pop_modifier = {
        pop_category_rulers_consumer_goods_upkeep_add = @living_standard_luxuries_high
        pop_category_specialists_consumer_goods_upkeep_add = @living_standard_luxuries_high
        pop_category_workers_consumer_goods_upkeep_add = @living_standard_luxuries_high
        pop_cat_ruler_political_power = 3
        pop_cat_specialist_political_power = 3
        pop_cat_worker_political_power = 3
    }
    triggered_pop_modifier = {
        potential = {
            exists = owner
            owner = {
                has_active_tradition = tr_mercantile_worker_coop_improved_ownership
            }
        }
        pop_cat_ruler_happiness = 0.05
        pop_cat_specialist_happiness = 0.05
        pop_cat_worker_happiness = 0.05
    }
    allow = {
        hidden_trigger = {
            exists = from
        }
        custom_tooltip = {
            fail_text = is_slaves_tooltip
            NOT = {
                has_citizenship_type = {
                    country = from
                    type = citizenship_slavery
                }
            }
        }
        custom_tooltip = {
            fail_text = is_servitude_tooltip
            NOR = {
                has_citizenship_type = {
                    country = from
                    type = citizenship_robot_servitude
                }
            }
        }
        custom_tooltip = {
            fail_text = is_purged_not_neutered
            if = {
                limit = {
                    OR = {
                        has_citizenship_type = {
                            country = from
                            type = citizenship_purge_machine
                        }
                        has_citizenship_type = {
                            country = from
                            type = citizenship_purge
                        }
                    }
                }
                has_purge_type = {
                    country = from
                    type = purge_neutering
                }
            }
        }
        custom_tooltip = {
            fail_text = SPECIES_MUST_NOT_BE_ASSIMILATING
            NOT = {
                has_citizenship_type = {
                    type = citizenship_assimilation
                    country = from
                }
            }
        }
    }
    ai_will_do = {
        factor = 1
    }
}
